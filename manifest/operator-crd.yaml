# for creating these resources it requires the user to be logged in as system admin
apiVersion: v1
kind: ServiceAccount
metadata:
  name: krb-operator
  namespace: test
  labels:
    app: krb-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: krb-operator
  labels:
    app: krb-operator
subjects:
  - kind: ServiceAccount
    name: krb-operator
    namespace: test
roleRef:
  kind: ClusterRole
  name: krb-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: krb-operator
rules:
  # "" - the core API group
  - apiGroups: ["", "authorization.k8s.io", "extensions"]
    resources: ["pods", "services", "configmaps", "secrets", "pods/exec", "deploymentconfigs"]
    verbs: ["get", "watch", "list", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "watch", "list", "create"]
  - apiGroups: ["io.github.novakov-alexey"]
    resources: ["krbs"]
    verbs: ["watch"]
  # for OpenShift
  - apiGroups: ["apps.openshift.io"]
    resources: ["deploymentconfigs"]
    verbs: ["get", "create", "list", "delete"]
  # for kubernetes, i.e. not for OpenShift
  - apiGroups: ["", "apps", "extensions"]
    resources: ["deployments"]
    verbs: ["get", "create", "list", "delete"]
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: krb-operator
  labels: &default-labels
    app.kubernetes.io/name: krb-operator
    app.kubernetes.io/version: v0.0.1-v1alpha1
spec:
  replicas: 1
  selector:
    matchLabels: *default-labels
  strategy:
    type: Recreate
  template:
    metadata:
      labels: *default-labels
    spec:
      serviceAccountName: krb-operator
      containers:
        - name: krb-operator
          image: alexeyn/kerberos-operator:0.1
          env:
            - name: KRB5_IMAGE
              value: alexeyn/krb5:latest
            - name: APP_CONFIG_PATH
              value: /opt/docker/resources/application.conf
            - name: K8S_SPECS_DIR
              value: /opt/docker/resources
          imagePullPolicy: Always
